"""
Django settings for cashcrm_project project.

Generated by 'django-admin startproject' using Django 4.2.21.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""


from django.contrib import messages
import os
from pathlib import Path
from celery.schedules import crontab
from dotenv import load_dotenv
load_dotenv()

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.getenv('SECRET_KEY', 'fallback-secret-if-you-forgot')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = os.getenv('DEBUG', 'False') == 'True'

ALLOWED_HOSTS = os.getenv('ALLOWED_HOSTS', '').split(',')


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    # Third-party apps
    'rest_framework',
    'rest_framework_simplejwt',
    'django_celery_beat',
    'corsheaders',
    'django_filters',

    # แอปภายในโปรเจกต์
    'core',     # core_02 (Dashboard, Permissions ใหม่)
    'revenue',
    'loans',
    'payables',
    'cashflow',
    'fleet',
    'mineprogress',
]

MIDDLEWARE = [

    'corsheaders.middleware.CorsMiddleware',

    'django.middleware.security.SecurityMiddleware',

    'whitenoise.middleware.WhiteNoiseMiddleware',  # ← ใส่ WhiteNoise

    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'cashcrm_project.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',

        # ชี้ไปที่โฟลเดอร์ core/templates
        'DIRS': [BASE_DIR / 'core' / 'templates'],

        # 'DIRS': [os.path.join(BASE_DIR, 'templates')],

        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

# ไฟล์ WSGI / ASGI
WSGI_APPLICATION = 'cashcrm_project.wsgi.application'
ASGI_APPLICATION = 'cashcrm_project.asgi.application'


# CHANNEL_LAYERS = {
#     "default": {
#         "BACKEND": "channels.layers.InMemoryChannelLayer"
#     }
# }

CHANNEL_LAYERS = {
    "default": {
        "BACKEND": "channels_redis.core.RedisChannelLayer",
        "CONFIG": {
            # "hosts": [('localhost', 6379)],
            "hosts": [('127.0.0.1', 6379)],
        },
    },
}


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': BASE_DIR / 'db.sqlite3',
#     }
# }

DATABASES = {
    "default": {
        "ENGINE":   "django.db.backends.postgresql",
        "HOST":     os.getenv("DATABASE_HOST", "db"),       # <— ชื่อ service db
        "PORT":     os.getenv("DATABASE_PORT", "5432"),
        "NAME":     os.getenv("POSTGRES_DB", "mydb"),
        "USER":     os.getenv("POSTGRES_USER", "myuser"),
        "PASSWORD": os.getenv("POSTGRES_PASSWORD", "mypassword"),
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

# LANGUAGE_CODE = 'en-us'
LANGUAGE_CODE = 'th-TH'

# TIME_ZONE = 'UTC'
TIME_ZONE = 'Asia/Bangkok'

USE_I18N = True
USE_L10N = True

USE_TZ = True

USE_THOUSAND_SEPARATOR=True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

# Static files (CSS, JavaScript, Images)
STATIC_URL = '/static/'
STATIC_ROOT = BASE_DIR / 'staticfiles'
# STATIC_ROOT = os.path.join(BASE_DIR,'staticfiles')

# ถ้าคุณมีโฟลเดอร์ static/ ใต้ root ของโปรเจกต์ ให้คงไว้
STATICFILES_DIRS = [
    BASE_DIR / 'static',
]

# STATICFILES_DIRS = [
#     # โฟลเดอร์ static ของโปรเจกต์ Django (เช่น ไฟล์ CSS, JS ทั่วไป)
#     os.path.join(BASE_DIR, 'static'),
# ]

# (OPTIONAL แต่แนะนำ) ให้ Whitenoise บีบอัด+แคชไฟล์
STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'



# WhiteNoise config (optional แต่ช่วยให้ compress & cache ดีขึ้น)
WHITENOISE_AUTOREFRESH = DEBUG
WHITENOISE_USE_FINDERS = True


MEDIA_URL = '/media/'
MEDIA_ROOT = BASE_DIR / 'media'
# MEDIA_ROOT = os.path.join(BASE_DIR, 'media')


# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


MESSAGE_TAGS = {
    messages.ERROR: 'danger'
}


# email stuff
# EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
# EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'
# EMAIL_BACKEND = 'django_smtp_ssl.SSLEmailBackend'
EMAIL_BACKEND = os.getenv('EMAIL_BACKEND')

EMAIL_USE_TLS = True
EMAIL_HOST = os.getenv('EMAIL_HOST')
EMAIL_HOST_USER = os.getenv('EMAIL_HOST_USER')
EMAIL_HOST_PASSWORD = os.getenv('EMAIL_HOST_PASSWORD')
DEFAULT_FROM_EMAIL = os.getenv('DEFAULT_FROM_EMAIL')
EMAIL_PORT = os.getenv('EMAIL_PORT')
EMAIL_SUBJECT_PREFIX = '[MaemohMine] '


GIPHY_URL = 'https://api.giphy.com/v1/gifs'
API_KEY = os.getenv('API_KEY')

OPENCAGE_API_KEY = os.getenv('OPENCAGE_API_KEY')


# ตั้งค่า Django REST Framework + JWT
REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework.authentication.SessionAuthentication',
        'rest_framework.authentication.BasicAuthentication',
        # หากต้องการ JWT: uncomment ข้างล่าง
        # 'rest_framework_simplejwt.authentication.JWTAuthentication',
    ),
    'DEFAULT_PERMISSION_CLASSES': (
        'rest_framework.permissions.IsAuthenticated',
    ),
}

CORS_ALLOW_ALL_ORIGINS = True

# CELERY_BROKER_URL = 'redis://127.0.0.1:6379'
# CELERY_RESULT_BACKEND = 'redis://127.0.0.1:6379'

# CELERY_BROKER_URL = 'redis://127.0.0.1:6379/0'
# CELERY_RESULT_BACKEND = 'redis://127.0.0.1:6379/0'

CELERY_BROKER_URL    = f"redis://{os.getenv('REDIS_HOST','redis')}:{os.getenv('REDIS_PORT','6379')}/0"
CELERY_RESULT_BACKEND= CELERY_BROKER_URL


CELERY_ACCEPT_CONTENT = ['application/json']
CELERY_RESULT_SERIALIZER = 'json'
CELERY_TASK_SELERIZER = 'json'


CELERY_TIMEZONE = "Asia/Bangkok"
CELERY_TASK_TRACK_STARTED = True
CELERY_BEAT_SCHEDULER = 'django_celery_beat.schedulers:DatabaseScheduler'
CELERY_TASK_TIME_LIMIT = 30 * 60


# CELERY_BROKER_URL = "redis://localhost:6379"
# CELERY_RESULT_BACKEND = "django-db"
CELERY_RESULT_EXTENDED = True


# -----------------------------------------------------------------------------
# Celery Beat Schedule (Periodic Tasks)
# -----------------------------------------------------------------------------
CELERY_BEAT_SCHEDULE = {
    # ทุกต้นเดือน ประมาณตี 00:05 → daily cashflow projection
    'daily_cashflow_projection': {
        'task': 'cashflow.tasks.daily_cashflow_projection',
        'schedule': crontab(hour=0, minute=5),
    },
    # ทุกต้นเดือน ตี 00:10 → calculate bankloan interest
    'monthly_bankloan_interest': {
        'task': 'loans.tasks.calculate_bankloan_interest',
        'schedule': crontab(hour=0, minute=10, day_of_month=1),
    },
    # ทุกต้นเดือน ตี 00:00 → run cashflow projection 12 เดือนล่วงหน้า (args คือตัวอย่าง)
    'monthly_cashflow_projection': {
        'task': 'cashflow.tasks.run_cashflow_projection_task',
        'schedule': crontab(hour=0, minute=0, day_of_month=1),
        'args': ('2025-01-01', 12, {
            "DSO": 60,
            "DPO": 30,
            "PN_Rate": 0.8,
            "TF_Rate": 1.0,
            "InterestRates": {
                "Pre-Finance": 6.5,
                "Working Capital": 7.0,
                "Hire Purchase": 5.0
            }
        }, 'Base'),
    },
    # ทุกวันเวลา 01:00 → ตรวจสอบ LCRequest expiry → สร้าง TRRequest
    'check_lcrequests_expiry': {
        'task': 'cashflow.tasks.check_lcrequests_expiry',
        'schedule': crontab(hour=1, minute=0),
    },

    'cleanup_expired_otps': {
        'task': 'core.tasks.delete_expired_otps',
        'schedule': crontab(hour=2, minute=0),
    },
}




# กรอกจาก Channel settings ของคุณ (หรือเก็บใน ENV vars แล้วดึงมา)
LINE_CHANNEL_SECRET = os.getenv('LINE_CHANNEL_SECRET')
LINE_CHANNEL_ACCESS_TOKEN = os.getenv('LINE_CHANNEL_ACCESS_TOKEN')

# ใส่ userId (หรือถ้าเป็น groupId ก็ใช้ push_text แทน multicast)
LINE_TARGET_IDS = os.getenv('LINE_TARGET_IDS', '')
if LINE_TARGET_IDS:
    LINE_TARGET_IDS = LINE_TARGET_IDS.split(',')
else:
    LINE_TARGET_IDS = []


# บังคับ HTTPS
if DEBUG:
    # พัฒนา: ใช้ HTTP ธรรมดา
    SESSION_COOKIE_SECURE = False
    CSRF_COOKIE_SECURE = False
    SECURE_SSL_REDIRECT = False
    # ไม่ต้องตั้ง CSRF_TRUSTED_ORIGINS (Django จะอนุญาต HTTP localhost เอง)
else:
    # production: EC2/Nginx+Let's Encrypt
    SESSION_COOKIE_SECURE = True
    CSRF_COOKIE_SECURE = True
    SECURE_SSL_REDIRECT = True
    SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')
    # เอา ALLOWED_HOSTS จาก env หรือ hardcode domain คุณ
    CSRF_TRUSTED_ORIGINS = [f"https://{h}" for h in ALLOWED_HOSTS if h]
